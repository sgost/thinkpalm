{"version":3,"file":"829.bundle.js","mappings":"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","sources":["webpack://atlas-payments-ui/./node_modules/react-router-dom/node_modules/history/index.js","webpack://atlas-payments-ui/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://atlas-payments-ui/./node_modules/react-router/node_modules/history/index.js","webpack://atlas-payments-ui/./node_modules/react-router/index.js","webpack://atlas-payments-ui/./node_modules/react-router-dom/index.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router v6.2.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { createContext, useRef, useState, useLayoutEffect, createElement, useContext, useEffect, useMemo, useCallback, Children, isValidElement, Fragment } from 'react';\nimport { createMemoryHistory, Action, parsePath } from 'history';\nexport { Action as NavigationType, createPath, parsePath } from 'history';\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n} ///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\n\nconst NavigationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n} ///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nfunction MemoryRouter(_ref) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref;\n  let historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nfunction Navigate(_ref2) {\n  let {\n    to,\n    replace,\n    state\n  } = _ref2;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let navigate = useNavigate();\n  useEffect(() => {\n    navigate(to, {\n      replace,\n      state\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nfunction Route(_props) {\n   process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nfunction Router(_ref3) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref3;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nfunction Routes(_ref4) {\n  let {\n    children,\n    location\n  } = _ref4;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to);\n  let joinedPathname = pathname;\n\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = useContext(NavigationContext);\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  let activeRef = useRef(false);\n  useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\n\nfunction useOutletContext() {\n  return useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\n\nfunction useOutlet(context) {\n  let outlet = useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\n\nfunction useResolvedPath(to) {\n  let {\n    matches\n  } = useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));\n  return useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    matches: parentMatches\n  } = useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  return _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n  })), parentMatches);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\n\nfunction createRoutesFromChildren(children) {\n  let routes = [];\n  Children.forEach(children, element => {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    let route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * The parameters that were parsed from the URL path.\n */\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, (_, key) => {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, _ => params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\"));\n}\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach((route, index) => {\n    let meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) return null;\n  return matches.reduceRight((outlet, match, index) => {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\n\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\n\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  let from;\n\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash; ///////////////////////////////////////////////////////////////////////////////\n\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.2.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { useRef, useState, useLayoutEffect, createElement, forwardRef, useCallback, useMemo } from 'react';\nimport { createBrowserHistory, createHashHistory } from 'history';\nimport { Router, useHref, createPath, useLocation, useResolvedPath, useNavigate } from 'react-router';\nexport { MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, createPath, createRoutesFromChildren, generatePath, matchPath, matchRoutes, parsePath, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes } from 'react-router';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded = [\"onClick\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"];\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} ////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = useState({\n    action: history.action,\n    location: history.location\n  });\n  useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    reloadDocument,\n    replace = false,\n    state,\n    target,\n    to\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let href = useHref(to);\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented && !reloadDocument) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let location = useLocation();\n  let path = useResolvedPath(to);\n  let locationPathname = location.pathname;\n  let toPathname = path.pathname;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive\n  }) : styleProp;\n  return /*#__PURE__*/createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n} ////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n  return useCallback(event => {\n    if (event.button === 0 && ( // Ignore everything but left clicks\n    !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n    ) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here.\n\n      let replace = !!replaceProp || createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = useRef(createSearchParams(defaultInit));\n  let location = useLocation();\n  let searchParams = useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = useCallback((nextInit, navigateOptions) => {\n    navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n  }, [navigate]);\n  return [searchParams, setSearchParams];\n}\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink, createSearchParams, HistoryRouter as unstable_HistoryRouter, useLinkClickHandler, useSearchParams };\n//# sourceMappingURL=index.js.map\n"],"names":["Action","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","BeforeUnloadEventType","PopStateEventType","promptBeforeUnload","event","preventDefault","returnValue","createEvents","handlers","push","fn","filter","handler","arg","forEach","createKey","Math","random","toString","substr","createPath","_ref","_ref$pathname","pathname","_ref$search","search","_ref$hash","hash","charAt","parsePath","path","parsedPath","hashIndex","indexOf","searchIndex","n","lowerBound","upperBound","min","max","invariant","cond","message","Error","NavigationContext","createContext","LocationContext","RouteContext","outlet","matches","MemoryRouter","basename","children","initialEntries","initialIndex","historyRef","useRef","current","options","_options3","_options3$initialEntr","entries","map","entry","state","index","action","Pop","location","listeners","blockers","getNextLocation","to","allowTx","retry","applyTx","nextAction","nextLocation","go","delta","nextIndex","history","createHref","Push","splice","replace","Replace","back","forward","listen","listener","block","blocker","setState","useState","useLayoutEffect","createElement","Router","navigationType","navigator","Navigate","_ref2","useInRouterContext","navigate","useNavigate","useEffect","Outlet","props","useOutlet","context","Route","_props","_ref3","basenameProp","locationProp","static","staticProp","normalizePathname","navigationContext","useMemo","trailingPathname","stripBasename","Provider","value","Routes","_ref4","useRoutes","createRoutesFromChildren","useHref","useContext","useResolvedPath","joinedPathname","toPathname","getToPathname","endsWithSlash","endsWith","joinPaths","useLocation","useNavigationType","useMatch","pattern","matchPath","locationPathname","routePathnamesJson","JSON","stringify","match","pathnameBase","activeRef","useCallback","resolveTo","parse","OutletContext","useOutletContext","useParams","routeMatch","params","routes","locationArg","parentMatches","parentParams","parentPathnameBase","route","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","startsWith","matchRoutes","slice","_renderMatches","Children","element","isValidElement","type","Fragment","caseSensitive","generatePath","_","branches","flattenRoutes","sort","a","b","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matchRouteBranch","parentsMeta","parentPath","relativePath","concat","computeScore","paramRe","isSplat","s","segments","split","initialScore","some","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","renderMatches","reduceRight","undefined","matcher","paramNames","regexpSource","paramName","RegExp","compilePath","captureGroups","memo","splatValue","decodeURIComponent","error","safelyDecodeURIComponent","resolvePath","fromPathname","pop","join","resolvePathname","normalizeSearch","normalizeHash","toArg","routePathnames","from","routePathnameIndex","toSegments","shift","toLowerCase","nextChar","paths","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","_excluded","_excluded2","BrowserRouter","window","_options$window","document","defaultView","globalHistory","getIndexAndLocation","_window$location","idx","usr","blockedPopTx","addEventListener","_getIndexAndLocation","_getIndexAndLocation2","getHistoryStateAndUrl","_getIndexAndLocation3","replaceState","_getHistoryStateAndUr","historyState","url","pushState","_getHistoryStateAndUr2","unblock","removeEventListener","createBrowserHistory","HashRouter","_options2$window","_parsePath","_parsePath$pathname","_parsePath$search","_parsePath$hash","handlePop","_getIndexAndLocation4","_getIndexAndLocation6","base","querySelector","href","getAttribute","getBaseHref","_getIndexAndLocation7","_getHistoryStateAndUr3","_getHistoryStateAndUr4","createHashHistory","HistoryRouter","Link","forwardRef","ref","onClick","reloadDocument","rest","internalOnClick","useLinkClickHandler","defaultPrevented","NavLink","_ref5","ariaCurrentProp","className","classNameProp","style","styleProp","isActive","ariaCurrent","Boolean","_temp","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","useSearchParams","defaultInit","defaultSearchParamsRef","createSearchParams","searchParams","has","getAll","append","nextInit","navigateOptions","init","URLSearchParams","Array","isArray","v"],"sourceRoot":""}